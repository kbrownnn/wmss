/*
 * Copyright (c) 2012 LinogistiX GmbH
 *
 *  www.linogistix.com
 *
 *  Project myWMS-LOS
 */
package de.linogistix.common.bobrowser.bo.detailview;

import de.linogistix.common.bobrowser.bo.BOEntityNode;
import de.linogistix.common.bobrowser.crud.gui.component.BOAdditionalContentWizard;
import de.linogistix.common.res.CommonBundleResolver;
import de.linogistix.common.util.ExceptionAnnotator;
import java.awt.Dialog;
import org.openide.nodes.Node;
import org.openide.util.NbBundle;
import org.mywms.model.BasicEntity;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

/**
 *
 * @author andreas
 */
public class BOCommentDetailViewPanel extends AbstractDetailViewPanel {

    /** Creates new form BOCommentDetailViewPanel */
    public BOCommentDetailViewPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        commentArea = new javax.swing.JTextArea();
        filler1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        addCommentButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        commentArea.setBackground(new java.awt.Color(245, 238, 217));
        commentArea.setColumns(20);
        commentArea.setEditable(false);
        commentArea.setLineWrap(true);
        commentArea.setRows(5);
        commentArea.setWrapStyleWord(true);
        commentArea.setDisabledTextColor(java.awt.Color.black);
        commentArea.setMargin(new java.awt.Insets(10, 5, 20, 10));
        jScrollPane1.setViewportView(commentArea);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        filler1.setText("  ");
        add(filler1, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        addCommentButton.setText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "BOCommentDetailViewPanel.addCommentButton.title")); // NOI18N
        addCommentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCommentButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addCommentButton);

        add(jPanel1, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void addCommentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCommentButtonActionPerformed

        try {

            BOAdditionalContentWizard w = new BOAdditionalContentWizard();
            Dialog d = DialogDisplayer.getDefault().createDialog(w);
            d.setVisible(true);

            if (w.getValue().equals(NotifyDescriptor.OK_OPTION) && w.getComment() != null && getExplorerManager().getSelectedNodes().length == 1) {

                BOEntityNode node = (BOEntityNode) getExplorerManager().getSelectedNodes()[0];
                BasicEntity e = getBoNode().getQueryService().queryById(node.getBo().getId());
                e.addAdditionalContent(w.getComment());
                getBoNode().getCrudService().update(e);
                getBoNode().getBo().fireOutdatedEvent(node);

            }
        } catch (Throwable ex) {
            ExceptionAnnotator.annotate(ex);
        }

    }//GEN-LAST:event_addCommentButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addCommentButton;
    public javax.swing.JTextArea commentArea;
    private javax.swing.JLabel filler1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setNode(Node node) {
        if (node == null){
            commentArea.setText("");
        }
        else{
            BOEntityNode entityNode = (BOEntityNode) node;
            commentArea.setText(entityNode.getBo().getAdditionalContent());
        }
    }

    @Override
    public String getPanelName() {
        return NbBundle.getMessage(CommonBundleResolver.class, "BOCommentDetailViewPanel.panelName");
    }

    public String getComment() {
        return commentArea.getText();
    }

    public void setComment(String comment) {
        this.commentArea.setText(comment);
    }

  
}
