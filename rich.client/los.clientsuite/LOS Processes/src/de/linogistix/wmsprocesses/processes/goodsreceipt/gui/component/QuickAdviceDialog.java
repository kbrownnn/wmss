/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package de.linogistix.wmsprocesses.processes.goodsreceipt.gui.component;

import de.linogistix.common.gui.listener.MinimumSizeComponentListener;
import de.linogistix.common.res.CommonBundleResolver;
import de.linogistix.common.util.ExceptionAnnotator;
import de.linogistix.inventory.gui.component.controls.ItemDataComboBoxModel;
import de.linogistix.los.query.BODTO;
import de.linogistix.wmsprocesses.res.WMSProcessesBundleResolver;
import java.awt.BorderLayout;
import java.awt.Dialog;
import java.awt.LayoutManager;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.text.ParseException;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JPanel;
import org.mywms.model.Client;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.HelpCtx;
import org.openide.util.NbBundle;

/**
 *
 * @author Trautmann
 */
public class QuickAdviceDialog extends JPanel implements ActionListener {

    private static final Logger log = Logger.getLogger(QuickAdviceDialog.class.getName());

    public DialogDescriptor dialogDescriptor;
    protected Dialog dialog;
    public final static String OK_BUTTON = "Ok";
    public final static String CANCEL_BUTTON = "Cancel";

    QuickAdvicePanel myPanel;

// Create options
    JButton options[] = new JButton[]{
        new CustomButton(NbBundle.getMessage(CommonBundleResolver.class, OK_BUTTON), NbBundle.getMessage(CommonBundleResolver.class, OK_BUTTON), OK_BUTTON),
        new CustomButton(NbBundle.getMessage(CommonBundleResolver.class, CANCEL_BUTTON), NbBundle.getMessage(CommonBundleResolver.class, CANCEL_BUTTON), CANCEL_BUTTON)
    };

    /** Creates new form detailDialog */
    public QuickAdviceDialog() {
        initComponents();
        postInit();
        dialogDescriptor = new DialogDescriptor(
                this,
                NbBundle.getMessage(WMSProcessesBundleResolver.class, "QuickAdvice"),
                true,
                options,
                options[1], //welcher defaultmaessig selektiert sein soll
                DialogDescriptor.DEFAULT_ALIGN,
                null, //getHelpCtx(),
                this);
        dialogDescriptor.setClosingOptions(options);
    }

    public HelpCtx getHelpCtx() {
        return null;
    }

    public void actionPerformed(final java.awt.event.ActionEvent ev) {
    }

    public void showDialog() {
        dialog = DialogDisplayer.getDefault().createDialog(dialogDescriptor);

        dialog.setModal(true);

        new MinimumSizeComponentListener(dialog, 800, 500);

        dialog.setVisible(true);

    }

    public void closeDialog() {
        dialog.dispose();
    }

    private void postInit() {
        myPanel = new QuickAdvicePanel();
        this.add(myPanel, BorderLayout.CENTER);
    }

    public JButton getOKButton() {
        return options[0];
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>
    // Variables declaration - do not modify
    // End of variables declaration

    void setClient(Client client) {
        myPanel.setClient(client);

    }

    public class CustomButton extends JButton {

        public CustomButton(String title, String mnemonic, String actionCommand) {
            super(title);
            if( mnemonic != null && mnemonic.length() > 0) {
                setMnemonic(mnemonic.charAt(0));
            }
            setActionCommand(actionCommand);
        }
    }

    public String getClientNumber(){
        return myPanel.getClient();
    }

    public String getItemData(){
        return myPanel.getItemData();
    }

    public BigDecimal getAmount(){
        return myPanel.getAmount();
    }

    public String getComment(){
        return myPanel.getComment();
    }


}
