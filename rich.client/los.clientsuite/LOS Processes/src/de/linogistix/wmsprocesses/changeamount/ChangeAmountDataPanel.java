/*
 * Copyright (c) 2006 - 2012 LinogistiX GmbH
 * 
 *  www.linogistix.com
 *  
 *  Project myWMS-LOS
 */
package de.linogistix.wmsprocesses.changeamount;

import de.linogistix.common.gui.component.controls.BOAutoFilteringComboBox;
import de.linogistix.common.res.CommonBundleResolver;

import de.linogistix.wmsprocesses.res.WMSProcessesBundleResolver;
import de.wms2.mywms.inventory.StockUnit;
import java.math.BigDecimal;
import java.text.ParseException;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import org.openide.util.NbBundle;

/**
 *
 * @author  trautm
 */
public class ChangeAmountDataPanel extends javax.swing.JPanel {

    /** Creates new form AbstractCenterPanel */
    public ChangeAmountDataPanel() {
        initComponents();
        stockUnitAutoFilteringComboBox.setBoClass(StockUnit.class);
        stockUnitAutoFilteringComboBox.initAutofiltering();
        stockUnitAutoFilteringComboBox.setEnabled(true);
        stockUnitAutoFilteringComboBox.getEditorLabel().setTitleText(NbBundle.getMessage(de.linogistix.common.res.CommonBundleResolver.class, "stockUnit"));

        itemDataLabel.setText(NbBundle.getMessage(WMSProcessesBundleResolver.class, "itemData")+":");
        amountLabel1.setText(NbBundle.getMessage(WMSProcessesBundleResolver.class, "amount")+":");
        unitLoadLabel.setText(NbBundle.getMessage(WMSProcessesBundleResolver.class, "unitLoad")+":");
        locationLabel.setText(NbBundle.getMessage(WMSProcessesBundleResolver.class, "location")+":");
        packagingLabel.setText(NbBundle.getMessage(CommonBundleResolver.class, "packagingUnit"));

        getItemDataField().setText("");
        getAmountField().setText("");
        getUnitLoadField().setText("");
        getLocationField().setText("");
        packagingField.removeAllItems();

        fAmount.setTitle(NbBundle.getMessage(WMSProcessesBundleResolver.class, "amount"));
        fAmount.setMandatory(true);
        fAmount.setMinimumValue(BigDecimal.ZERO, true);

        fAmountReserved.setTitle(NbBundle.getMessage(WMSProcessesBundleResolver.class, "reservedAmount"));
        fAmountReserved.setMandatory(true);
        fAmountReserved.setMinimumValue(BigDecimal.ZERO, true);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        stockInfoPanel = new javax.swing.JPanel();
        itemDataLabel = new javax.swing.JLabel();
        amountLabel1 = new javax.swing.JLabel();
        unitLoadLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        locationText = new javax.swing.JLabel();
        itemDataText = new javax.swing.JLabel();
        amountText = new javax.swing.JLabel();
        unitLoadText = new javax.swing.JLabel();
        stockUnitAutoFilteringComboBox = new de.linogistix.common.gui.component.controls.BOAutoFilteringComboBox();
        fAmount = new de.linogistix.common.gui.component.controls.LOSNumericFormattedTextField();
        fAmountReserved = new de.linogistix.common.gui.component.controls.LOSNumericFormattedTextField();
        packagingField = new javax.swing.JComboBox<>();
        packagingLabel = new javax.swing.JLabel();

        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setAutoscrolls(true);
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jPanel1.setLayout(new java.awt.GridBagLayout());

        stockInfoPanel.setMinimumSize(new java.awt.Dimension(400, 60));
        stockInfoPanel.setLayout(new java.awt.GridBagLayout());

        itemDataLabel.setForeground(new java.awt.Color(70, 70, 70));
        itemDataLabel.setText("itemData");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stockInfoPanel.add(itemDataLabel, gridBagConstraints);

        amountLabel1.setForeground(new java.awt.Color(70, 70, 70));
        amountLabel1.setText("amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stockInfoPanel.add(amountLabel1, gridBagConstraints);

        unitLoadLabel.setForeground(new java.awt.Color(70, 70, 70));
        unitLoadLabel.setText("unitLoad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stockInfoPanel.add(unitLoadLabel, gridBagConstraints);

        locationLabel.setForeground(new java.awt.Color(70, 70, 70));
        locationLabel.setText("location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stockInfoPanel.add(locationLabel, gridBagConstraints);

        locationText.setForeground(new java.awt.Color(70, 70, 70));
        locationText.setText("location");
        locationText.setMinimumSize(new java.awt.Dimension(250, 15));
        locationText.setPreferredSize(new java.awt.Dimension(200, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stockInfoPanel.add(locationText, gridBagConstraints);

        itemDataText.setForeground(new java.awt.Color(70, 70, 70));
        itemDataText.setText("itemData");
        itemDataText.setMinimumSize(new java.awt.Dimension(300, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stockInfoPanel.add(itemDataText, gridBagConstraints);

        amountText.setForeground(new java.awt.Color(70, 70, 70));
        amountText.setText("amount");
        amountText.setMinimumSize(new java.awt.Dimension(250, 15));
        amountText.setPreferredSize(new java.awt.Dimension(200, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stockInfoPanel.add(amountText, gridBagConstraints);

        unitLoadText.setForeground(new java.awt.Color(70, 70, 70));
        unitLoadText.setText("unitLoad");
        unitLoadText.setMinimumSize(new java.awt.Dimension(250, 15));
        unitLoadText.setPreferredSize(new java.awt.Dimension(200, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        stockInfoPanel.add(unitLoadText, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(stockInfoPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(stockUnitAutoFilteringComboBox, gridBagConstraints);

        fAmount.setColumns(10);
        fAmount.setTitle("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel1.add(fAmount, gridBagConstraints);

        fAmountReserved.setColumns(10);
        fAmountReserved.setTitle("Reserved Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(fAmountReserved, gridBagConstraints);

        packagingField.setName(""); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(packagingField, gridBagConstraints);

        packagingLabel.setText("packaging");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 20);
        jPanel1.add(packagingLabel, gridBagConstraints);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountLabel1;
    private javax.swing.JLabel amountText;
    protected de.linogistix.common.gui.component.controls.LOSNumericFormattedTextField fAmount;
    protected de.linogistix.common.gui.component.controls.LOSNumericFormattedTextField fAmountReserved;
    private javax.swing.JLabel itemDataLabel;
    private javax.swing.JLabel itemDataText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JLabel locationText;
    private javax.swing.JComboBox<String> packagingField;
    private javax.swing.JLabel packagingLabel;
    private javax.swing.JPanel stockInfoPanel;
    protected de.linogistix.common.gui.component.controls.BOAutoFilteringComboBox stockUnitAutoFilteringComboBox;
    private javax.swing.JLabel unitLoadLabel;
    private javax.swing.JLabel unitLoadText;
    // End of variables declaration//GEN-END:variables

    public BOAutoFilteringComboBox getStockUnitAutoFilteringComboBox() {
        return stockUnitAutoFilteringComboBox;
    }

    public JLabel getItemDataField() {
        return itemDataText;
    }
    public JLabel getAmountField() {
        return amountText;
    }
    public JLabel getUnitLoadField() {
        return unitLoadText;
    }
    public JLabel getLocationField() {
        return locationText;
    }

    public BigDecimal getAmount(){
        try {
            return fAmount.getValue();
        } catch (ParseException ex) {
            return null;
        }
    }

    public BigDecimal getReservedAmount(){
        try {
            return fAmountReserved.getValue();
        } catch (ParseException ex) {
           return null;
        }
    }

    public void setAmount(BigDecimal amount) {
        fAmount.setValue(amount == null ? BigDecimal.ZERO : amount);
    }

    public void setReserveAmount(BigDecimal reserveAmount) {
        fAmountReserved.setValue(reserveAmount == null ? BigDecimal.ZERO : reserveAmount);
    }

    public JComboBox<String> getPackagingField() {
        return packagingField;
    }

    public String getPackagingUnit() {
        String value = (String)packagingField.getSelectedItem();
        return value;
    }

    public void setPackagingUnit(String packagingUnit){
        packagingField.setSelectedItem(packagingUnit);
    }
}
